package GUI;
import Conversor.Monedas.*;
import Conversor.Pesos.*;
import Conversor.Temperaturas.*;
import Conversor.Iconos.ResizeIconos;
import java.awt.event.ItemEvent;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


/**
 *
 * @author schav
 */
public class ConversorDeAlura extends javax.swing.JFrame {

    /**
     * Creates new form Welcome2Frame
     */
    public ConversorDeAlura() {
        initComponents();
        
        ImageIcon icon = new ImageIcon("C:\\Users\\schav\\Desktop\\Oracle One\\Challenges\\Challenge 2 - Conversor de Monedas\\src\\Icons\\divisas.png");
        divisaIcon.setIcon(ResizeIconos.scaleImage(icon, divisaIcon));
        
        icon = new ImageIcon("C:\\Users\\schav\\Desktop\\Oracle One\\Challenges\\Challenge 2 - Conversor de Monedas\\src\\Icons\\LogoDeAlura.png");
        aluraIcon.setIcon(ResizeIconos.scaleImage(icon, aluraIcon));
        
        icon = new ImageIcon("C:\\Users\\schav\\Desktop\\Oracle One\\Challenges\\Challenge 2 - Conversor de Monedas\\src\\Icons\\balanza.png");
        pesoIcon.setIcon(ResizeIconos.scaleImage(icon, pesoIcon));
        
        icon = new ImageIcon("C:\\Users\\schav\\Desktop\\Oracle One\\Challenges\\Challenge 2 - Conversor de Monedas\\src\\Icons\\temperaturas.png");
        temperaturaIcon.setIcon(ResizeIconos.scaleImage(icon, temperaturaIcon));
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        panelEncabezado = new javax.swing.JPanel();
        panelSalir = new javax.swing.JPanel();
        btnSalir = new javax.swing.JLabel();
        EncabezadoLabel = new javax.swing.JLabel();
        aluraIcon = new javax.swing.JLabel();
        PanelDeConversion = new javax.swing.JPanel();
        panelConversionMonedas = new javax.swing.JPanel();
        divisaOrigenLabel = new javax.swing.JLabel();
        divisaDestinoComboBox = new javax.swing.JComboBox<>();
        divisaDestinoLabel = new javax.swing.JLabel();
        divisaIcon = new javax.swing.JLabel();
        ConvertirMonedaBtn = new javax.swing.JButton();
        divisaOrigenComboBox = new javax.swing.JComboBox<>();
        ResultadoDeconversionDeDivisas = new javax.swing.JTextField();
        panelConversionPesos = new javax.swing.JPanel();
        pesoOrigenLabel = new javax.swing.JLabel();
        pesoDestinoLabel = new javax.swing.JLabel();
        pesoOrigenComboBox = new javax.swing.JComboBox<>();
        pesoDestinoComboBox = new javax.swing.JComboBox<>();
        ConvertirPesoBtn = new javax.swing.JButton();
        pesoIcon = new javax.swing.JLabel();
        ResultadoDeconversionDePeso = new javax.swing.JTextField();
        panelConversionTemperaturas = new javax.swing.JPanel();
        temperaturaOrigenLabel = new javax.swing.JLabel();
        temperaturaDestinoComboBox = new javax.swing.JComboBox<>();
        temperaturaDestinoLabel = new javax.swing.JLabel();
        temperaturaIcon = new javax.swing.JLabel();
        ConvertirTemperaturaBtn = new javax.swing.JButton();
        temperaturaOrigenComboBox = new javax.swing.JComboBox<>();
        ResultadoDeconversionDeTemperaturas = new javax.swing.JTextField();
        panelDeCantidad = new javax.swing.JPanel();
        cantidadLabel = new javax.swing.JLabel();
        campoDeCantidad = new javax.swing.JTextField();
        panelOpciones = new javax.swing.JPanel();
        monedasLabel1 = new javax.swing.JLabel();
        pesoLabel = new javax.swing.JLabel();
        temperaturasLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));
        setLocation(new java.awt.Point(250, 150));
        setUndecorated(true);
        setResizable(false);

        panelPrincipal.setBackground(new java.awt.Color(51, 51, 51));

        panelEncabezado.setBackground(new java.awt.Color(51, 51, 51));

        panelSalir.setBackground(new java.awt.Color(51, 51, 51));
        panelSalir.setPreferredSize(new java.awt.Dimension(40, 40));

        btnSalir.setBackground(new java.awt.Color(102, 102, 102));
        btnSalir.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 0, 0));
        btnSalir.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSalir.setText("X");
        btnSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSalirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelSalirLayout = new javax.swing.GroupLayout(panelSalir);
        panelSalir.setLayout(panelSalirLayout);
        panelSalirLayout.setHorizontalGroup(
            panelSalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );
        panelSalirLayout.setVerticalGroup(
            panelSalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        EncabezadoLabel.setBackground(new java.awt.Color(255, 255, 255));
        EncabezadoLabel.setFont(new java.awt.Font("Sitka Text", 1, 40)); // NOI18N
        EncabezadoLabel.setForeground(new java.awt.Color(255, 255, 255));
        EncabezadoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EncabezadoLabel.setText("Conversor de Alura");

        javax.swing.GroupLayout panelEncabezadoLayout = new javax.swing.GroupLayout(panelEncabezado);
        panelEncabezado.setLayout(panelEncabezadoLayout);
        panelEncabezadoLayout.setHorizontalGroup(
            panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEncabezadoLayout.createSequentialGroup()
                .addComponent(aluraIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EncabezadoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(panelSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelEncabezadoLayout.setVerticalGroup(
            panelEncabezadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEncabezadoLayout.createSequentialGroup()
                .addComponent(panelSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panelEncabezadoLayout.createSequentialGroup()
                .addComponent(EncabezadoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(aluraIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PanelDeConversion.setForeground(new java.awt.Color(60, 63, 65));
        PanelDeConversion.setPreferredSize(new java.awt.Dimension(755, 243));
        PanelDeConversion.setLayout(new java.awt.CardLayout());

        panelConversionMonedas.setBackground(new java.awt.Color(51, 51, 51));
        panelConversionMonedas.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(255, 255, 255)));
        panelConversionMonedas.setForeground(new java.awt.Color(60, 63, 65));
        panelConversionMonedas.setToolTipText("");

        divisaOrigenLabel.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        divisaOrigenLabel.setForeground(new java.awt.Color(255, 255, 255));
        divisaOrigenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        divisaOrigenLabel.setText("Divisa Origen");
        divisaOrigenLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        divisaDestinoComboBox.setBackground(new java.awt.Color(255, 255, 255));
        divisaDestinoComboBox.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        divisaDestinoComboBox.setForeground(new java.awt.Color(0, 0, 0));
        divisaDestinoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " Peso dominicano (DOP)", " DÃ³lar estadounidense  (USD)", " Euro (EUR)", "Libra esterlina (GBP)", "Yen (JPY)", "Won surcoreano (KRW)", "Peso argentino  (ARS)", "Peso mexicano (MXN )", "Peso colombiano (COP )" }));
        divisaDestinoComboBox.setSelectedIndex(1);
        divisaDestinoComboBox.setToolTipText("");
        divisaDestinoComboBox.setBorder(null);
        divisaDestinoComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                divisaDestinoComboBoxItemStateChanged(evt);
            }
        });

        divisaDestinoLabel.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        divisaDestinoLabel.setForeground(new java.awt.Color(255, 255, 255));
        divisaDestinoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        divisaDestinoLabel.setText("Divisa Destino");
        divisaDestinoLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        ConvertirMonedaBtn.setBackground(new java.awt.Color(21, 24, 21));
        ConvertirMonedaBtn.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        ConvertirMonedaBtn.setForeground(new java.awt.Color(255, 255, 255));
        ConvertirMonedaBtn.setText("Convertir");
        ConvertirMonedaBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ConvertirMonedaBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConvertirMonedaBtnMouseClicked(evt);
            }
        });

        divisaOrigenComboBox.setBackground(new java.awt.Color(255, 255, 255));
        divisaOrigenComboBox.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        divisaOrigenComboBox.setForeground(new java.awt.Color(0, 0, 0));
        divisaOrigenComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " Peso dominicano (DOP)", " DÃ³lar estadounidense  (USD)", " Euro (EUR)", "Libra esterlina (GBP)", "Yen (JPY)", "Won surcoreano (KRW)", "Peso argentino  (ARS)", "Peso mexicano (MXN)", "Peso colombiano (COP)" }));
        divisaOrigenComboBox.setToolTipText("");
        divisaOrigenComboBox.setBorder(null);
        divisaOrigenComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                divisaOrigenComboBoxItemStateChanged(evt);
            }
        });

        ResultadoDeconversionDeDivisas.setBackground(new java.awt.Color(60, 64, 65));
        ResultadoDeconversionDeDivisas.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        ResultadoDeconversionDeDivisas.setForeground(new java.awt.Color(255, 255, 255));
        ResultadoDeconversionDeDivisas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoDeconversionDeDivisas.setText("0.0");
        ResultadoDeconversionDeDivisas.setBorder(null);

        javax.swing.GroupLayout panelConversionMonedasLayout = new javax.swing.GroupLayout(panelConversionMonedas);
        panelConversionMonedas.setLayout(panelConversionMonedasLayout);
        panelConversionMonedasLayout.setHorizontalGroup(
            panelConversionMonedasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConversionMonedasLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(panelConversionMonedasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(divisaOrigenLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(divisaOrigenComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(98, 98, 98)
                .addComponent(divisaIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(panelConversionMonedasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(divisaDestinoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(divisaDestinoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
            .addGroup(panelConversionMonedasLayout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(ResultadoDeconversionDeDivisas, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConversionMonedasLayout.createSequentialGroup()
                .addContainerGap(280, Short.MAX_VALUE)
                .addComponent(ConvertirMonedaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282))
        );
        panelConversionMonedasLayout.setVerticalGroup(
            panelConversionMonedasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConversionMonedasLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panelConversionMonedasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConversionMonedasLayout.createSequentialGroup()
                        .addGroup(panelConversionMonedasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(divisaDestinoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divisaOrigenLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelConversionMonedasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(divisaDestinoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divisaOrigenComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(divisaIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(ResultadoDeconversionDeDivisas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(ConvertirMonedaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PanelDeConversion.add(panelConversionMonedas, "card2");

        panelConversionPesos.setBackground(new java.awt.Color(51, 51, 51));
        panelConversionPesos.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(255, 255, 255)));
        panelConversionPesos.setForeground(new java.awt.Color(60, 63, 65));
        panelConversionPesos.setPreferredSize(new java.awt.Dimension(756, 255));

        pesoOrigenLabel.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        pesoOrigenLabel.setForeground(new java.awt.Color(255, 255, 255));
        pesoOrigenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pesoOrigenLabel.setText("Peso Origen");
        pesoOrigenLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        pesoDestinoLabel.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        pesoDestinoLabel.setForeground(new java.awt.Color(255, 255, 255));
        pesoDestinoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pesoDestinoLabel.setText("Peso Destino");
        pesoDestinoLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        pesoOrigenComboBox.setBackground(new java.awt.Color(255, 255, 255));
        pesoOrigenComboBox.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        pesoOrigenComboBox.setForeground(new java.awt.Color(0, 0, 0));
        pesoOrigenComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gramos (g)", "Kilogramo (kg)", "Tonelada (t)", "Milligramo (mg)\t", "Libras (lb)", "Onza (oz)", "Carat (ct)" }));
        pesoOrigenComboBox.setToolTipText("");
        pesoOrigenComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pesoOrigenComboBoxItemStateChanged(evt);
            }
        });

        pesoDestinoComboBox.setBackground(new java.awt.Color(255, 255, 255));
        pesoDestinoComboBox.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        pesoDestinoComboBox.setForeground(new java.awt.Color(0, 0, 0));
        pesoDestinoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gramos (g)", "Kilogramo (kg)", "Tonelada (t)", "Milligramo (mg)", "Libras (lb)", "Onza (oz)", "Carat (ct)" }));
        pesoDestinoComboBox.setSelectedIndex(1);
        pesoDestinoComboBox.setToolTipText("");
        pesoDestinoComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pesoDestinoComboBoxItemStateChanged(evt);
            }
        });

        ConvertirPesoBtn.setBackground(new java.awt.Color(21, 24, 21));
        ConvertirPesoBtn.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        ConvertirPesoBtn.setForeground(new java.awt.Color(255, 255, 255));
        ConvertirPesoBtn.setText("Convertir");
        ConvertirPesoBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ConvertirPesoBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConvertirPesoBtnMouseClicked(evt);
            }
        });

        ResultadoDeconversionDePeso.setBackground(new java.awt.Color(60, 64, 65));
        ResultadoDeconversionDePeso.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        ResultadoDeconversionDePeso.setForeground(new java.awt.Color(255, 255, 255));
        ResultadoDeconversionDePeso.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoDeconversionDePeso.setText("0.0");
        ResultadoDeconversionDePeso.setBorder(null);

        javax.swing.GroupLayout panelConversionPesosLayout = new javax.swing.GroupLayout(panelConversionPesos);
        panelConversionPesos.setLayout(panelConversionPesosLayout);
        panelConversionPesosLayout.setHorizontalGroup(
            panelConversionPesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConversionPesosLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(panelConversionPesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pesoOrigenLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(pesoOrigenComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(97, 97, 97)
                .addComponent(pesoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelConversionPesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pesoDestinoComboBox, 0, 219, Short.MAX_VALUE)
                    .addComponent(pesoDestinoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
            .addGroup(panelConversionPesosLayout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(ResultadoDeconversionDePeso, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConversionPesosLayout.createSequentialGroup()
                .addContainerGap(280, Short.MAX_VALUE)
                .addComponent(ConvertirPesoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282))
        );
        panelConversionPesosLayout.setVerticalGroup(
            panelConversionPesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConversionPesosLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panelConversionPesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConversionPesosLayout.createSequentialGroup()
                        .addGroup(panelConversionPesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesoOrigenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pesoDestinoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelConversionPesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesoOrigenComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pesoDestinoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pesoIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(ResultadoDeconversionDePeso, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ConvertirPesoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PanelDeConversion.add(panelConversionPesos, "card3");

        panelConversionTemperaturas.setBackground(new java.awt.Color(51, 51, 51));
        panelConversionTemperaturas.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(255, 255, 255)));
        panelConversionTemperaturas.setForeground(new java.awt.Color(255, 255, 255));
        panelConversionTemperaturas.setToolTipText("");
        panelConversionTemperaturas.setRequestFocusEnabled(false);

        temperaturaOrigenLabel.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        temperaturaOrigenLabel.setForeground(new java.awt.Color(255, 255, 255));
        temperaturaOrigenLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        temperaturaOrigenLabel.setText("Temperatura Origen");
        temperaturaOrigenLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        temperaturaDestinoComboBox.setBackground(new java.awt.Color(255, 255, 255));
        temperaturaDestinoComboBox.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        temperaturaDestinoComboBox.setForeground(new java.awt.Color(0, 0, 0));
        temperaturaDestinoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius (Â°C)", "Fahrenheit (Â°F)", "Kelvin (K)", "Rankine (Â°R)" }));
        temperaturaDestinoComboBox.setSelectedIndex(1);
        temperaturaDestinoComboBox.setToolTipText("");
        temperaturaDestinoComboBox.setBorder(null);
        temperaturaDestinoComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                temperaturaDestinoComboBoxItemStateChanged(evt);
            }
        });

        temperaturaDestinoLabel.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        temperaturaDestinoLabel.setForeground(new java.awt.Color(255, 255, 255));
        temperaturaDestinoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        temperaturaDestinoLabel.setText("Temperatura Destino");
        temperaturaDestinoLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));

        ConvertirTemperaturaBtn.setBackground(new java.awt.Color(21, 24, 21));
        ConvertirTemperaturaBtn.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        ConvertirTemperaturaBtn.setForeground(new java.awt.Color(255, 255, 255));
        ConvertirTemperaturaBtn.setText("Convertir");
        ConvertirTemperaturaBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ConvertirTemperaturaBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConvertirTemperaturaBtnMouseClicked(evt);
            }
        });

        temperaturaOrigenComboBox.setBackground(new java.awt.Color(255, 255, 255));
        temperaturaOrigenComboBox.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        temperaturaOrigenComboBox.setForeground(new java.awt.Color(0, 0, 0));
        temperaturaOrigenComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius (Â°C)", "Fahrenheit (Â°F)", "Kelvin (K)", "Rankine (Â°R)" }));
        temperaturaOrigenComboBox.setToolTipText("");
        temperaturaOrigenComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                temperaturaOrigenComboBoxItemStateChanged(evt);
            }
        });

        ResultadoDeconversionDeTemperaturas.setEditable(false);
        ResultadoDeconversionDeTemperaturas.setBackground(new java.awt.Color(60, 64, 65));
        ResultadoDeconversionDeTemperaturas.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        ResultadoDeconversionDeTemperaturas.setForeground(new java.awt.Color(255, 255, 255));
        ResultadoDeconversionDeTemperaturas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoDeconversionDeTemperaturas.setText("0.0");
        ResultadoDeconversionDeTemperaturas.setBorder(null);

        javax.swing.GroupLayout panelConversionTemperaturasLayout = new javax.swing.GroupLayout(panelConversionTemperaturas);
        panelConversionTemperaturas.setLayout(panelConversionTemperaturasLayout);
        panelConversionTemperaturasLayout.setHorizontalGroup(
            panelConversionTemperaturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConversionTemperaturasLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(panelConversionTemperaturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(temperaturaOrigenLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(temperaturaOrigenComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(98, 98, 98)
                .addComponent(temperaturaIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(panelConversionTemperaturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(temperaturaDestinoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(temperaturaDestinoComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
            .addGroup(panelConversionTemperaturasLayout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addComponent(ResultadoDeconversionDeTemperaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelConversionTemperaturasLayout.createSequentialGroup()
                .addContainerGap(280, Short.MAX_VALUE)
                .addComponent(ConvertirTemperaturaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282))
        );
        panelConversionTemperaturasLayout.setVerticalGroup(
            panelConversionTemperaturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConversionTemperaturasLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(panelConversionTemperaturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelConversionTemperaturasLayout.createSequentialGroup()
                        .addGroup(panelConversionTemperaturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(temperaturaDestinoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(temperaturaOrigenLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelConversionTemperaturasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(temperaturaDestinoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(temperaturaOrigenComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(temperaturaIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(ResultadoDeconversionDeTemperaturas, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ConvertirTemperaturaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PanelDeConversion.add(panelConversionTemperaturas, "card2");

        panelDeCantidad.setBackground(new java.awt.Color(51, 51, 51));

        cantidadLabel.setBackground(new java.awt.Color(69, 73, 74));
        cantidadLabel.setFont(new java.awt.Font("Sitka Text", 1, 32)); // NOI18N
        cantidadLabel.setForeground(new java.awt.Color(255, 255, 255));
        cantidadLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cantidadLabel.setText("CANTIDAD");
        cantidadLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        campoDeCantidad.setBackground(new java.awt.Color(60, 64, 65));
        campoDeCantidad.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        campoDeCantidad.setForeground(new java.awt.Color(255, 255, 255));
        campoDeCantidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        campoDeCantidad.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray, java.awt.Color.darkGray));
        campoDeCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                campoDeCantidadKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panelDeCantidadLayout = new javax.swing.GroupLayout(panelDeCantidad);
        panelDeCantidad.setLayout(panelDeCantidadLayout);
        panelDeCantidadLayout.setHorizontalGroup(
            panelDeCantidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDeCantidadLayout.createSequentialGroup()
                .addComponent(cantidadLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoDeCantidad))
        );
        panelDeCantidadLayout.setVerticalGroup(
            panelDeCantidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDeCantidadLayout.createSequentialGroup()
                .addGroup(panelDeCantidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cantidadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(campoDeCantidad))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelOpciones.setBackground(new java.awt.Color(51, 51, 51));

        monedasLabel1.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        monedasLabel1.setForeground(new java.awt.Color(255, 255, 255));
        monedasLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        monedasLabel1.setText("Monedas");
        monedasLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        monedasLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        monedasLabel1.setMaximumSize(new java.awt.Dimension(80, 18));
        monedasLabel1.setMinimumSize(new java.awt.Dimension(80, 18));
        monedasLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                monedasLabel1MouseClicked(evt);
            }
        });

        pesoLabel.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        pesoLabel.setForeground(new java.awt.Color(255, 255, 255));
        pesoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pesoLabel.setText("Pesos");
        pesoLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        pesoLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pesoLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pesoLabel.setMaximumSize(new java.awt.Dimension(80, 18));
        pesoLabel.setMinimumSize(new java.awt.Dimension(80, 18));
        pesoLabel.setPreferredSize(new java.awt.Dimension(80, 18));
        pesoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pesoLabelMouseClicked(evt);
            }
        });

        temperaturasLabel.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        temperaturasLabel.setForeground(new java.awt.Color(255, 255, 255));
        temperaturasLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        temperaturasLabel.setText("Temperaturas");
        temperaturasLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 255, 255)));
        temperaturasLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        temperaturasLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        temperaturasLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                temperaturasLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelOpcionesLayout = new javax.swing.GroupLayout(panelOpciones);
        panelOpciones.setLayout(panelOpcionesLayout);
        panelOpcionesLayout.setHorizontalGroup(
            panelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcionesLayout.createSequentialGroup()
                .addComponent(monedasLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(temperaturasLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelOpcionesLayout.setVerticalGroup(
            panelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(monedasLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(pesoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(temperaturasLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelDeCantidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PanelDeConversion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelOpciones, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelEncabezado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addComponent(panelEncabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelDeCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(panelOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelDeConversion, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMouseClicked
        JOptionPane.showMessageDialog(btnSalir, "Hasta la proxima");
        System.exit(0);
    }//GEN-LAST:event_btnSalirMouseClicked

    private void monedasLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monedasLabel1MouseClicked
        panelConversionPesos.setVisible(false);
        panelConversionTemperaturas.setVisible(false);
        panelConversionMonedas.setVisible(true);
    }//GEN-LAST:event_monedasLabel1MouseClicked

    private void pesoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pesoLabelMouseClicked
        panelConversionMonedas.setVisible(false);
        panelConversionTemperaturas.setVisible(false);
        panelConversionPesos.setVisible(true);
    }//GEN-LAST:event_pesoLabelMouseClicked

    private void ConvertirMonedaBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConvertirMonedaBtnMouseClicked
        
        if (campoDeCantidad.getText().isEmpty()) { 
            JOptionPane.showMessageDialog(campoDeCantidad, "Rellenar el campo de cantidad !!!");
        }
        else{
            Moneda divisaOrigen = GeneradorDeMonedas.GenerarMoneda(divisaOrigenComboBox.getSelectedIndex());
            Moneda divisaDestino = GeneradorDeMonedas.GenerarMoneda(divisaDestinoComboBox.getSelectedIndex());
            double cantidadAConvertir = Double.parseDouble(campoDeCantidad.getText());        
            double resultado = divisaOrigen.convertirValorLocalADestino(divisaDestino, cantidadAConvertir);
            ResultadoDeconversionDeDivisas.setText(Double.toString(resultado) + " " +divisaDestino.getIsoCodeOAcronimo());
        }
        
    }//GEN-LAST:event_ConvertirMonedaBtnMouseClicked

    private void campoDeCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoDeCantidadKeyTyped
    
        
        if (Character.isLetter(evt.getKeyChar())) {
            evt.consume();
            JOptionPane.showMessageDialog(campoDeCantidad, "Solo utilizar caracteres numericos y \".\" para la parte decimal");
        }else{
            try {
                Double.valueOf(campoDeCantidad.getText() + evt.getKeyChar());
            } catch (NumberFormatException e) {
                evt.consume();
            }
        }
    }//GEN-LAST:event_campoDeCantidadKeyTyped

    private void ConvertirPesoBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConvertirPesoBtnMouseClicked
        
        if (campoDeCantidad.getText().isEmpty()) { 
            JOptionPane.showMessageDialog(campoDeCantidad, "Rellenar el campo de cantidad !!!");
        }
        else{
            Peso pesoOrigen = GeneradorDePesos.GenerarPeso(pesoOrigenComboBox.getSelectedIndex());
            Peso pesoDestino = GeneradorDePesos.GenerarPeso(pesoDestinoComboBox.getSelectedIndex());
            double cantidadAConvertir = Double.parseDouble(campoDeCantidad.getText());
            double resultado = pesoOrigen.convertirValorLocalADestino(pesoDestino, cantidadAConvertir);
            ResultadoDeconversionDePeso.setText(Double.toString(resultado) + pesoDestino.getIsoCodeOAcronimo());
        }
    }//GEN-LAST:event_ConvertirPesoBtnMouseClicked

    private void temperaturasLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_temperaturasLabelMouseClicked
        panelConversionMonedas.setVisible(false);
        panelConversionPesos.setVisible(false);
        panelConversionTemperaturas.setVisible(true);
        
        
    }//GEN-LAST:event_temperaturasLabelMouseClicked

    private void ConvertirTemperaturaBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConvertirTemperaturaBtnMouseClicked
        
        if (campoDeCantidad.getText().isEmpty()) { 
            JOptionPane.showMessageDialog(campoDeCantidad, "Rellenar el campo de cantidad !!!");
        }
        else{
            Temperaturas temperaturaOrigen = GeneradorDeTemperaturas.GenerarTemperatura(temperaturaOrigenComboBox.getSelectedIndex());
            Temperaturas temperaturaDestino = GeneradorDeTemperaturas.GenerarTemperatura(temperaturaDestinoComboBox.getSelectedIndex());
            DecimalFormat df = new DecimalFormat("#.####");
            df.setRoundingMode(RoundingMode.FLOOR);
            double cantidadAConvertir = (Double.parseDouble(campoDeCantidad.getText()));
            String resultado = df.format(temperaturaOrigen.destinoDeConversion(temperaturaDestinoComboBox.getSelectedIndex(), cantidadAConvertir));
            ResultadoDeconversionDeTemperaturas.setText(resultado + temperaturaDestino.getSimbolo());
        }
        
        
    }//GEN-LAST:event_ConvertirTemperaturaBtnMouseClicked

    private void temperaturaDestinoComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_temperaturaDestinoComboBoxItemStateChanged
        
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            if(temperaturaOrigenComboBox.getSelectedIndex() ==  temperaturaDestinoComboBox.getSelectedIndex()){
           
                if((temperaturaOrigenComboBox.getSelectedIndex())+2 > temperaturaOrigenComboBox.getItemCount()){
                    temperaturaDestinoComboBox.setSelectedIndex(0);
                }
                else{
                    temperaturaDestinoComboBox.setSelectedIndex(temperaturaOrigenComboBox.getSelectedIndex()+1);

                }
            }
        }
    }//GEN-LAST:event_temperaturaDestinoComboBoxItemStateChanged

    private void temperaturaOrigenComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_temperaturaOrigenComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            if(temperaturaOrigenComboBox.getSelectedIndex() ==  temperaturaDestinoComboBox.getSelectedIndex()){
           
                if((temperaturaOrigenComboBox.getSelectedIndex())+2 > temperaturaOrigenComboBox.getItemCount()){
                    temperaturaDestinoComboBox.setSelectedIndex(0);
                }
                else{
                    temperaturaDestinoComboBox.setSelectedIndex(temperaturaOrigenComboBox.getSelectedIndex()+1);
                }
            }
        }
    }//GEN-LAST:event_temperaturaOrigenComboBoxItemStateChanged

    private void pesoOrigenComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pesoOrigenComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            if(pesoOrigenComboBox.getSelectedIndex() ==  pesoDestinoComboBox.getSelectedIndex()){
           
                if((pesoOrigenComboBox.getSelectedIndex())+2 > pesoOrigenComboBox.getItemCount()){
                    pesoDestinoComboBox.setSelectedIndex(0);
                }
                else{
                    pesoDestinoComboBox.setSelectedIndex(pesoOrigenComboBox.getSelectedIndex()+1);
                }
            }
        }
    }//GEN-LAST:event_pesoOrigenComboBoxItemStateChanged

    private void pesoDestinoComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pesoDestinoComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            if(pesoOrigenComboBox.getSelectedIndex() ==  pesoDestinoComboBox.getSelectedIndex()){
           
                if((pesoOrigenComboBox.getSelectedIndex())+2 > pesoOrigenComboBox.getItemCount()){
                    pesoDestinoComboBox.setSelectedIndex(0);
                }
                else{
                    pesoDestinoComboBox.setSelectedIndex(pesoOrigenComboBox.getSelectedIndex()+1);
                }
            }
        }
    }//GEN-LAST:event_pesoDestinoComboBoxItemStateChanged

    private void divisaDestinoComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_divisaDestinoComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            if(divisaOrigenComboBox.getSelectedIndex() ==  divisaDestinoComboBox.getSelectedIndex()){
           
                if((divisaOrigenComboBox.getSelectedIndex())+2 > divisaOrigenComboBox.getItemCount()){
                    divisaDestinoComboBox.setSelectedIndex(0);
                }
                else{
                    divisaDestinoComboBox.setSelectedIndex(divisaDestinoComboBox.getSelectedIndex()+1);
                }
            }
        }
    }//GEN-LAST:event_divisaDestinoComboBoxItemStateChanged

    private void divisaOrigenComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_divisaOrigenComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            
            if(divisaOrigenComboBox.getSelectedIndex() ==  divisaDestinoComboBox.getSelectedIndex()){
           
                if((divisaOrigenComboBox.getSelectedIndex())+2 > divisaOrigenComboBox.getItemCount()){
                    divisaDestinoComboBox.setSelectedIndex(0);
                }
                else{
                    divisaDestinoComboBox.setSelectedIndex(divisaDestinoComboBox.getSelectedIndex()+1);
                }
            }
        }
    }//GEN-LAST:event_divisaOrigenComboBoxItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorDeAlura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorDeAlura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorDeAlura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorDeAlura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversorDeAlura().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConvertirMonedaBtn;
    private javax.swing.JButton ConvertirPesoBtn;
    private javax.swing.JButton ConvertirTemperaturaBtn;
    private javax.swing.JLabel EncabezadoLabel;
    private javax.swing.JPanel PanelDeConversion;
    private javax.swing.JTextField ResultadoDeconversionDeDivisas;
    private javax.swing.JTextField ResultadoDeconversionDePeso;
    private javax.swing.JTextField ResultadoDeconversionDeTemperaturas;
    private javax.swing.JLabel aluraIcon;
    private javax.swing.JLabel btnSalir;
    private javax.swing.JTextField campoDeCantidad;
    private javax.swing.JLabel cantidadLabel;
    private javax.swing.JComboBox<String> divisaDestinoComboBox;
    private javax.swing.JLabel divisaDestinoLabel;
    private javax.swing.JLabel divisaIcon;
    private javax.swing.JComboBox<String> divisaOrigenComboBox;
    private javax.swing.JLabel divisaOrigenLabel;
    private javax.swing.JLabel monedasLabel1;
    private javax.swing.JPanel panelConversionMonedas;
    private javax.swing.JPanel panelConversionPesos;
    private javax.swing.JPanel panelConversionTemperaturas;
    private javax.swing.JPanel panelDeCantidad;
    private javax.swing.JPanel panelEncabezado;
    private javax.swing.JPanel panelOpciones;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelSalir;
    private javax.swing.JComboBox<String> pesoDestinoComboBox;
    private javax.swing.JLabel pesoDestinoLabel;
    private javax.swing.JLabel pesoIcon;
    private javax.swing.JLabel pesoLabel;
    private javax.swing.JComboBox<String> pesoOrigenComboBox;
    private javax.swing.JLabel pesoOrigenLabel;
    private javax.swing.JComboBox<String> temperaturaDestinoComboBox;
    private javax.swing.JLabel temperaturaDestinoLabel;
    private javax.swing.JLabel temperaturaIcon;
    private javax.swing.JComboBox<String> temperaturaOrigenComboBox;
    private javax.swing.JLabel temperaturaOrigenLabel;
    private javax.swing.JLabel temperaturasLabel;
    // End of variables declaration//GEN-END:variables
}
